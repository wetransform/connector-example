version: "3.9"
services:
  forest-owner-a:
#    image: ghcr.io/connected-intelligent-systems/connector:v0.10.0
    # platform: linux/x86_64
    # image: wetransform/connector:latest
    image: wetransform/connector:0.0.1
    ports:
      - 20191:20191 # health check
      # - 20192:20192
      - 20193:20193 # management endpoint
      - 20194:20194 # ds protocol (normaly forwarded, but edcs are in same network)
      - 20291:20291 # public endpoint
      - 20199:20199 # federated catalog endpoint
    volumes:
      - ./edc/vault.properties:/resources/vault.properties
      - ./edc/nodes.properties:/resources/nodes.properties
    environment:
      EDC_VAULT_FILE_PATH: /resources/vault.properties
      EDC_DSP_CALLBACK_ADDRESS: http://host.docker.internal:30194/protocol
      EDC_DATAPLANE_API_PUBLIC_BASEURL: http://host.docker.internal:30291/public
      EDC_DATAPLANE_PROXY_PUBLIC_ENDPOINT: http://host.docker.internal:30291/public
      WEB_HTTP_PORT: 20191
      WEB_HTTP_PATH: /api
      WEB_HTTP_MANAGEMENT_PORT: 20193
      WEB_HTTP_MANAGEMENT_PATH: /management
      WEB_HTTP_PROTOCOL_PORT: 20194
      WEB_HTTP_PROTOCOL_PATH: /protocol
      WEB_HTTP_CATALOG_PORT: 20199
      WEB_HTTP_CATALOG_PATH: /catalog
      EDC_PUBLIC_KEY_ALIAS: public-key
      EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS: private-key
      EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS: public-key
      WEB_HTTP_PUBLIC_PORT: 20291
      WEB_HTTP_PUBLIC_PATH: /public
      WEB_HTTP_CONTROL_PORT: 20192
      WEB_HTTP_CONTROL_PATH: /control
      EDC_DATASOURCE_DEFAULT_URL: jdbc:postgresql://postgres:5432/dataspace?currentSchema=forestownera
      EDC_DATASOURCE_DEFAULT_USER: user
      EDC_DATASOURCE_DEFAULT_PASSWORD: postgres
      EDC_SQL_SCHEMA_AUTOCREATE: true
      EDC_OAUTH_TOKEN_URL: http://host.docker.internal:8080/realms/dataspace/protocol/openid-connect/token
      EDC_OAUTH_PROVIDER_JWKS_URL: http://host.docker.internal:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH_CERTIFICATE_ALIAS: public-key
      EDC_OAUTH_PRIVATE_KEY_ALIAS: private-key
      EDC_OAUTH_CLIENT_ID: forest-owner-a
      EDC_OAUTH_PROVIDER_AUDIENCE: http://host.docker.internal:8080/realms/dataspace
      EDC_OAUTH_VALIDATION_NBF_LEEWAY: 20
      EDC_OAUTH_VALIDATION_ISSUED_AT_LEEWAY: 5
      EDC_AGENT_IDENTITY_KEY: participant_id
      EDC_PARTICIPANT_ID: company-forest-owner-a
      EDC_NODES_FILE_PATH: /resources/nodes.properties
      EDC_OAUTH2_JWKS_URL: http://host.docker.internal:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH2_ISSUER: http://host.docker.internal:8080/realms/dataspace
      EDC_API_AUTH_TYPE: oauth2
      EDC_WEB_HTTP_AUTHENTICATION_TYPE: oauth2
      EDC_OAUTH_CLAIMS_PARTICIPANT_ROLE: wetransform_role
      EDC_OAUTH_CLAIMS_PARTICIPANT_GEOFENCE: geofence
#      EDC_WEB_CORS_ENABLED: true
#      EDC_WEB_CORS_ALLOWED_ORIGINS: http://localhost:8081
#      EDC_WEB_CORS_ALLOWED_METHODS: GET,POST,OPTIONS
#      EDC_WEB_CORS_ALLOWED_HEADERS: Authorization,Content-Type,X-Api-Key

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:20191/api/check/health"]
      interval: 20s
      timeout: 20s
      retries: 5
    # depends_on:
    #   keycloak:
    #     condition: service_healthy
    #     restart: true

  forest-owner-b:
#    image: ghcr.io/connected-intelligent-systems/connector:v0.10.0
    # image: wetransform/connector:latest
    image: wetransform/connector:0.0.1
    # platform: linux/x86_64
    ports:
      - 21191:21191 # health check
      # - 21192:21192
      - 21193:21193 # management endpoint
      - 21194:21194 # ds protocol (normaly forwarded, but edcs are in same network)
      - 21291:21291 # public endpoint
      - 21199:21199 # federated catalog endpoint
    volumes:
      - ./edc/vault.properties:/resources/vault.properties
      - ./edc/nodes.properties:/resources/nodes.properties
    environment:
      EDC_VAULT_FILE_PATH: /resources/vault.properties
      EDC_DSP_CALLBACK_ADDRESS: http://host.docker.internal:31194/protocol
      EDC_DATAPLANE_API_PUBLIC_BASEURL: http://host.docker.internal:31291/public
      EDC_DATAPLANE_PROXY_PUBLIC_ENDPOINT: http://host.docker.internal:31291/public
      WEB_HTTP_PORT: 21191
      WEB_HTTP_PATH: /api
      WEB_HTTP_MANAGEMENT_PORT: 21193
      WEB_HTTP_MANAGEMENT_PATH: /management
      WEB_HTTP_PROTOCOL_PORT: 21194
      WEB_HTTP_PROTOCOL_PATH: /protocol
      WEB_HTTP_CATALOG_PORT: 21199
      WEB_HTTP_CATALOG_PATH: /catalog
      EDC_PUBLIC_KEY_ALIAS: public-key
      EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS: private-key
      EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS: public-key
      WEB_HTTP_PUBLIC_PORT: 21291
      WEB_HTTP_PUBLIC_PATH: /public
      WEB_HTTP_CONTROL_PORT: 21192
      WEB_HTTP_CONTROL_PATH: /control
      EDC_DATASOURCE_DEFAULT_URL: jdbc:postgresql://postgres:5432/dataspace?currentSchema=forestownerb
      EDC_DATASOURCE_DEFAULT_USER: user
      EDC_DATASOURCE_DEFAULT_PASSWORD: postgres
      EDC_SQL_SCHEMA_AUTOCREATE: true
      EDC_OAUTH_TOKEN_URL: http://host.docker.internal:8080/realms/dataspace/protocol/openid-connect/token
      EDC_OAUTH_PROVIDER_JWKS_URL: http://host.docker.internal:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH_CERTIFICATE_ALIAS: public-key
      EDC_OAUTH_PRIVATE_KEY_ALIAS: private-key
      EDC_OAUTH_CLIENT_ID: forest-owner-b
      EDC_OAUTH_PROVIDER_AUDIENCE: http://host.docker.internal:8080/realms/dataspace
      EDC_OAUTH_VALIDATION_NBF_LEEWAY: 20
      EDC_OAUTH_VALIDATION_ISSUED_AT_LEEWAY: 5
      EDC_AGENT_IDENTITY_KEY: participant_id
      EDC_PARTICIPANT_ID: company-forest-owner-b
      EDC_NODES_FILE_PATH: /resources/nodes.properties
      EDC_OAUTH2_JWKS_URL: http://host.docker.internal:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH2_ISSUER: http://host.docker.internal:8080/realms/dataspace
      EDC_API_AUTH_TYPE: oauth2
      EDC_WEB_HTTP_AUTHENTICATION_TYPE: oauth2
      EDC_OAUTH_CLAIMS_PARTICIPANT_ROLE: wetransform_role
      EDC_OAUTH_CLAIMS_PARTICIPANT_GEOFENCE: geofence
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:21191/api/check/health"]
      interval: 20s
      timeout: 20s
      retries: 5
    # depends_on:
    #   keycloak:
    #     condition: service_healthy
    #     restart: true


  forest-owner-c:
    #    image: ghcr.io/connected-intelligent-systems/connector:v0.10.0
    # image: wetransform/connector:latest
    image: wetransform/connector:0.0.1
    # platform: linux/x86_64
    ports:
      - 23191:23191 # health check
      - 23192:23192
      - 23193:23193 # management endpoint
      - 23194:23194 # ds protocol (normaly forwarded, but edcs are in same network)
      - 23291:23291 # public endpoint
      - 23199:23199 # federated catalog endpoint
    volumes:
      - ./edc/vault.properties:/resources/vault.properties
      - ./edc/nodes.properties:/resources/nodes.properties
    environment:
      EDC_VAULT_FILE_PATH: /resources/vault.properties
      EDC_DSP_CALLBACK_ADDRESS: http://host.docker.internal:33194/protocol
      EDC_DATAPLANE_API_PUBLIC_BASEURL: http://host.docker.internal:33291/public
      EDC_DATAPLANE_PROXY_PUBLIC_ENDPOINT: http://host.docker.internal:33291/public
      WEB_HTTP_PORT: 23191
      WEB_HTTP_PATH: /api
      WEB_HTTP_MANAGEMENT_PORT: 23193
      WEB_HTTP_MANAGEMENT_PATH: /management
      WEB_HTTP_PROTOCOL_PORT: 23194
      WEB_HTTP_PROTOCOL_PATH: /protocol
      WEB_HTTP_CATALOG_PORT: 23199
      WEB_HTTP_CATALOG_PATH: /catalog
      EDC_PUBLIC_KEY_ALIAS: public-key
      EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS: private-key
      EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS: public-key
      WEB_HTTP_PUBLIC_PORT: 23291
      WEB_HTTP_PUBLIC_PATH: /public
      WEB_HTTP_CONTROL_PORT: 23192
      WEB_HTTP_CONTROL_PATH: /control
      EDC_DATASOURCE_DEFAULT_URL: jdbc:postgresql://postgres:5432/dataspace?currentSchema=forestownerc
      EDC_DATASOURCE_DEFAULT_USER: user
      EDC_DATASOURCE_DEFAULT_PASSWORD: postgres
      EDC_SQL_SCHEMA_AUTOCREATE: true
      EDC_OAUTH_TOKEN_URL: http://host.docker.internal:8080/realms/dataspace/protocol/openid-connect/token
      EDC_OAUTH_PROVIDER_JWKS_URL: http://host.docker.internal:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH_CERTIFICATE_ALIAS: public-key
      EDC_OAUTH_PRIVATE_KEY_ALIAS: private-key
      EDC_OAUTH_CLIENT_ID: forest-owner-c
      EDC_OAUTH_PROVIDER_AUDIENCE: http://host.docker.internal:8080/realms/dataspace
      EDC_OAUTH_VALIDATION_NBF_LEEWAY: 20
      EDC_OAUTH_VALIDATION_ISSUED_AT_LEEWAY: 5
      EDC_AGENT_IDENTITY_KEY: participant_id
      EDC_PARTICIPANT_ID: company-forest-owner-c
      EDC_NODES_FILE_PATH: /resources/nodes.properties
      EDC_OAUTH2_JWKS_URL: http://host.docker.internal:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH2_ISSUER: http://host.docker.internal:8080/realms/dataspace
      EDC_API_AUTH_TYPE: oauth2
      EDC_WEB_HTTP_AUTHENTICATION_TYPE: oauth2
      EDC_OAUTH_CLAIMS_PARTICIPANT_ROLE: wetransform_role
      EDC_OAUTH_CLAIMS_PARTICIPANT_GEOFENCE: geofence
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:23191/api/check/health" ]
      interval: 20s
      timeout: 20s
      retries: 5
    # depends_on:
    #   keycloak:
    #     condition: service_healthy
    #     restart: true

  forest-inventory-researcher:
    #    image: ghcr.io/connected-intelligent-systems/connector:v0.10.0
    # image: wetransform/connector:latest
    image: wetransform/connector:0.0.1
    # platform: linux/x86_64
    ports:
      - 22191:22191 # health check
      # - 22192:22192
      - 22193:22193 # management endpoint
      - 22194:22194 # ds protocol (normaly forwarded, but edcs are in same network)
      - 22291:22291 # public endpoint
      - 22199:22199 # federated catalog endpoint
    volumes:
      - ./edc/vault.properties:/resources/vault.properties
      - ./edc/nodes.properties:/resources/nodes.properties
    environment:
      EDC_VAULT_FILE_PATH: /resources/vault.properties
      EDC_DSP_CALLBACK_ADDRESS: http://host.docker.internal:32194/protocol
      EDC_DATAPLANE_API_PUBLIC_BASEURL: http://host.docker.internal:32291/public
      EDC_DATAPLANE_PROXY_PUBLIC_ENDPOINT: http://host.docker.internal:32291/public
      WEB_HTTP_PORT: 22191
      WEB_HTTP_PATH: /api
      WEB_HTTP_MANAGEMENT_PORT: 22193
      WEB_HTTP_MANAGEMENT_PATH: /management
      WEB_HTTP_PROTOCOL_PORT: 22194
      WEB_HTTP_PROTOCOL_PATH: /protocol
      WEB_HTTP_CATALOG_PORT: 22199
      WEB_HTTP_CATALOG_PATH: /catalog
      EDC_PUBLIC_KEY_ALIAS: public-key
      EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS: private-key
      EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS: public-key
      WEB_HTTP_PUBLIC_PORT: 22291
      WEB_HTTP_PUBLIC_PATH: /public
      WEB_HTTP_CONTROL_PORT: 22192
      WEB_HTTP_CONTROL_PATH: /control
      EDC_DATASOURCE_DEFAULT_URL: jdbc:postgresql://postgres:5432/dataspace?currentSchema=inventoryresearcher
      EDC_DATASOURCE_DEFAULT_USER: user
      EDC_DATASOURCE_DEFAULT_PASSWORD: postgres
      EDC_SQL_SCHEMA_AUTOCREATE: true
      EDC_OAUTH_TOKEN_URL: http://host.docker.internal:8080/realms/dataspace/protocol/openid-connect/token
      EDC_OAUTH_PROVIDER_JWKS_URL: http://host.docker.internal:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH_CERTIFICATE_ALIAS: public-key
      EDC_OAUTH_PRIVATE_KEY_ALIAS: private-key
      EDC_OAUTH_CLIENT_ID: forest-inventory-researcher
      EDC_OAUTH_PROVIDER_AUDIENCE: http://host.docker.internal:8080/realms/dataspace
      EDC_OAUTH_VALIDATION_NBF_LEEWAY: 20
      EDC_OAUTH_VALIDATION_ISSUED_AT_LEEWAY: 5
      EDC_AGENT_IDENTITY_KEY: participant_id
      EDC_PARTICIPANT_ID: company-forest-inventory-researcher
      EDC_NODES_FILE_PATH: /resources/nodes.properties
      EDC_OAUTH2_JWKS_URL: http://host.docker.internal:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH2_ISSUER: http://host.docker.internal:8080/realms/dataspace
      EDC_API_AUTH_TYPE: oauth2
      EDC_WEB_HTTP_AUTHENTICATION_TYPE: oauth2
      EDC_OAUTH_CLAIMS_PARTICIPANT_ROLE: wetransform_role
      EDC_OAUTH_CLAIMS_PARTICIPANT_GEOFENCE: geofence
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:22191/api/check/health"]
      interval: 20s
      timeout: 20s
      retries: 5
    # depends_on:
    #   keycloak:
    #     condition: service_healthy
    #     restart: true
