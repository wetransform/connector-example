# This development docker compose encompasses all services needed for developing the connector (not the portal).
# Therefore, all required services are included except for the connectors.
# Currently, the setup requires four connectors being run on the following ports:
#
# Environment variable     | Connector 1 | Connector 2 | Connector 3 | Connector 4
# =========================|=============|=============|=============|============
# WEB_HTTP_PORT            | 20191       | 21191       | 22191       | 23191
# WEB_HTTP_CONTROL_PORT    | 20192       | 21192       | 22192       | 23192
# WEB_HTTP_MANAGEMENT_PORT | 20193       | 21193       | 22193       | 23193
# WEB_HTTP_PROTOCOL_PORT   | 20194       | 21194       | 22194       | 23194
# WEB_HTTP_CATALOG_PORT    | 20199       | 21199       | 22199       | 23199
# WEB_HTTP_PUBLIC_PORT     | 20291       | 21291       | 22291       | 23291
#
# (A full set of environment variables can be found in the README.md)
#
# All those ports will also be reachable on <PORT>+1000 and then be logged into the mitm-proxy reachable via http://localhost:9081/?token=edc-mitm
# So make sure that EDC_DSP_CALLBACK_ADDRESS, EDC_DATAPLANE_API_PUBLIC_BASEURL, and the nodes.properties file in use
# use those ports if you want the communication logged by the mitm-proxy.
services:
  postgres:
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dataspace
    image: bitnami/postgresql:17.2.0
    ports:
      - "5432:5432"
    configs:
      - source: postgres_init_sql
        target: /docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      start_period: 10s
      retries: 5

  geodata:
    image: nginx
    ports:
      - "8088:80"
    volumes:
      - ./geodata:/usr/share/nginx/html:ro
    configs:
      - source: geodata_nginx_config
        target: /etc/nginx/nginx.conf
    restart: always

  mitm:
    image: mitmproxy/mitmproxy:latest
    command: |
      mitmweb
      --web-host 0.0.0.0 --web-port 9081 --set web_password='edc-mitm'
      --mode reverse:http://host.docker.internal:7080@8080
      --mode reverse:http://host.docker.internal:20291@30291
      --mode reverse:http://host.docker.internal:20193@30193
      --mode reverse:http://host.docker.internal:20194@30194
      --mode reverse:http://host.docker.internal:20199@30199
      --mode reverse:http://host.docker.internal:21291@31291
      --mode reverse:http://host.docker.internal:21193@31193
      --mode reverse:http://host.docker.internal:21194@31194
      --mode reverse:http://host.docker.internal:21199@31199
      --mode reverse:http://host.docker.internal:22291@32291
      --mode reverse:http://host.docker.internal:22193@32193
      --mode reverse:http://host.docker.internal:22194@32194
      --mode reverse:http://host.docker.internal:22199@32199
      --mode reverse:http://host.docker.internal:23291@33291
      --mode reverse:http://host.docker.internal:23193@33193
      --mode reverse:http://host.docker.internal:23194@33194
      --mode reverse:http://host.docker.internal:23199@33199
    ports:
      - "9081:9081"
      - "8080:8080"
      - "30291:30291"
      - "30193:30193"
      - "30194:30194"
      - "30199:30199"
      - "31291:31291"
      - "31193:31193"
      - "31194:31194"
      - "31199:31199"
      - "32291:32291"
      - "32193:32193"
      - "32194:32194"
      - "32199:32199"
      - "33291:33291"
      - "33193:33193"
      - "33194:33194"
      - "33199:33199"


  keycloak:
    image: bitnami/keycloak:23.0.3
    ports:
      - "7080:8080"
    environment:
      - KEYCLOAK_DATABASE_VENDOR=dev-file
      - KEYCLOAK_ADMIN_USER=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KEYCLOAK_EXTRA_ARGS='--import-realm'
      - KEYCLOAK_ENABLE_HEALTH_ENDPOINTS=true
    volumes:
      - ./keycloak/realm-export-dataspace.json:/opt/bitnami/keycloak/data/import/dataspace-realm.json
    healthcheck:
        test: ["CMD-SHELL", "curl --fail http://localhost:8080/realms/dataspace/.well-known/openid-configuration"]
        interval: 30s
        timeout: 10s
        start_interval: 30s
        retries: 5
    depends_on:
      postgres:
        condition: service_healthy
        restart: true

  portal-forest-owner-a:
    image: ghcr.io/connected-intelligent-systems/portal:ingeodtm-demo-1
    ports:
      - "8085:8085"
    environment:
      EDC_URL: http://host.docker.internal:30193/management
      FEDERATED_CATALOG_URL: http://host.docker.internal:30199/catalog
      PORT: 8085
      DEFAULT_USER_ID: company-forest-owner-a
      DEFAULT_USER_FULL_NAME: Company forest owner a
      DEFAULT_USER_EMAIL: admin@company-forest-owner-a.local
      DEFAULT_USER_TENANT_ID: default
      DEFAULT_USER_ROLES: admin
    configs:
      - source: portal_config_js
        target: /app/public/config.js
    depends_on:
      keycloak:
        condition: service_healthy
        restart: true


  portal-forest-owner-b:
    image: ghcr.io/connected-intelligent-systems/portal:ingeodtm-demo-1
    ports:
      - "8086:8086"
    environment:
      EDC_URL: http://host.docker.internal:31193/management
      FEDERATED_CATALOG_URL: http://host.docker.internal:31199/catalog
      PORT: 8086
      DEFAULT_USER_ID: company-forest-owner-b
      DEFAULT_USER_FULL_NAME: Company forest owner b
      DEFAULT_USER_EMAIL: admin@company-forest-owner-b.local
      DEFAULT_USER_TENANT_ID: default
      DEFAULT_USER_ROLES: admin
    configs:
      - source: portal_config_js
        target: /app/public/config.js
    depends_on:
      keycloak:
        condition: service_healthy
        restart: true

  portal-forest-owner-c:
    image: ghcr.io/connected-intelligent-systems/portal:ingeodtm-demo-1
    ports:
      - "8089:8089"
    environment:
      EDC_URL: http://host.docker.internal:33193/management
      FEDERATED_CATALOG_URL: http://host.docker.internal:33199/catalog
      PORT: 8089
      DEFAULT_USER_ID: company-forest-owner-c
      DEFAULT_USER_FULL_NAME: Company forest owner c
      DEFAULT_USER_EMAIL: admin@company-forest-owner-c.local
      DEFAULT_USER_TENANT_ID: default
      DEFAULT_USER_ROLES: admin
    configs:
      - source: portal_config_js
        target: /app/public/config.js
    depends_on:
      keycloak:
        condition: service_healthy
        restart: true

  portal-forest-inventory-researcher:
    image: ghcr.io/connected-intelligent-systems/portal:ingeodtm-demo-1
    ports:
      - "8087:8087"
    environment:
      EDC_URL: http://host.docker.internal:32193/management
      FEDERATED_CATALOG_URL: http://host.docker.internal:32199/catalog
      PORT: 8087
      DEFAULT_USER_ID: company-forest-inventory-researcher
      DEFAULT_USER_FULL_NAME: Company forest-inventory-researcher
      DEFAULT_USER_EMAIL: admin@company-forest-inventory-researcher.local
      DEFAULT_USER_TENANT_ID: default
      DEFAULT_USER_ROLES: admin
    configs:
      - source: portal_config_js
        target: /app/public/config.js
    depends_on:
      keycloak:
        condition: service_healthy
        restart: true

configs:
  postgres_init_sql:
    content: |
      CREATE SCHEMA IF NOT EXISTS forestownera;
      CREATE SCHEMA IF NOT EXISTS forestownerb;
      CREATE SCHEMA IF NOT EXISTS forestownerc;
      CREATE SCHEMA IF NOT EXISTS inventoryresearcher;
  portal_config_js:
    content: |
      var config = {
        showDevices: ${PORTAL_FRONTEND_SHOW_DEVICES-false},
        showThingDescriptions: ${PORTAL_FRONTEND_SHOW_THING_DESCRIPTIONS-false},
        showQuery: ${PORTAL_FRONTEND_SHOW_QUERY-false},
        showCustomers: ${PORTAL_FRONTEND_SHOW_CUSTOMERS-false},
        showAssets: ${PORTAL_FRONTEND_SHOW_ASSETS-true},
        showPolicies: ${PORTAL_FRONTEND_SHOW_POLICIES-true},
        showContractDefinitions: ${PORTAL_FRONTEND_SHOW_CONTRACT_DEFINITIONS-true},
        showCatalog: ${PORTAL_FRONTEND_SHOW_CATALOG-true},
        showFederatedCatalog: ${PORTAL_FRONTEND_SHOW_FEDERATED_CATALOG-true},
        showContractAgreements: ${PORTAL_FRONTEND_SHOW_CONTRACT_AGREEMENTS-true},
        showTransferProcesses: ${PORTAL_FRONTEND_SHOW_TRANSFER_PROCESSES-true},
        showThingsboard: ${PORTAL_FRONTEND_SHOW_THINGSBOARD-false},
        showKeycloak: ${PORTAL_FRONTEND_SHOW_KEYCLOAK-false}
      }
  geodata_nginx_config:
    content: |
      worker_processes 1;

      events {
          worker_connections 1024;
      }

      http {
          include       mime.types;
          default_type  application/octet-stream;

          server {
              listen 80;
              server_name localhost;

              root /usr/share/nginx/html;
              index index.html;

              location ~ \.json$ {
                  default_type application/json;
              }

              location ~ \.geojson$ {
                  default_type application/json;
              }

              location / {
                  autoindex on;
                  autoindex_format json;
              }

              error_page 404 /404.html;
          }
      }
