version: "3.9"
services:
  forest-owner-a:
#    image: ghcr.io/connected-intelligent-systems/connector:v0.10.0
    image: wetransform/connector:latest
    ports:
      - 19191:19191 # health check
      # - 19192:19192
      - 19193:19193 # management endpoint
      - 19194:19194 # ds protocol (normaly forwarded, but edcs are in same network)
      - 19291:19291 # public endpoint
      - 19199:19199 # federated catalog endpoint
    volumes:
      - ./edc/vault.properties:/resources/vault.properties
      - ./edc/nodes.properties:/resources/nodes.properties
    environment:
      EDC_VAULT_FILE_PATH: /resources/vault.properties
      EDC_DSP_CALLBACK_ADDRESS: http://forest-owner-a:19194/protocol
      EDC_DATAPLANE_API_PUBLIC_BASEURL: http://forest-owner-a:19291/public
      WEB_HTTP_PORT: 19191
      WEB_HTTP_PATH: /api
      WEB_HTTP_MANAGEMENT_PORT: 19193
      WEB_HTTP_MANAGEMENT_PATH: /management
      WEB_HTTP_PROTOCOL_PORT: 19194
      WEB_HTTP_PROTOCOL_PATH: /protocol
      WEB_HTTP_CATALOG_PORT: 19199
      WEB_HTTP_CATALOG_PATH: /catalog
      EDC_PUBLIC_KEY_ALIAS: public-key
      EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS: private-key
      EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS: public-key
      WEB_HTTP_PUBLIC_PORT: 19291
      WEB_HTTP_PUBLIC_PATH: /public
      WEB_HTTP_CONTROL_PORT: 19192
      WEB_HTTP_CONTROL_PATH: /control
      EDC_DATASOURCE_DEFAULT_URL: jdbc:postgresql://postgres:5432/dataspace?currentSchema=forestownera
      EDC_DATASOURCE_DEFAULT_USER: user
      EDC_DATASOURCE_DEFAULT_PASSWORD: postgres
      EDC_SQL_SCHEMA_AUTOCREATE: true
      EDC_OAUTH_TOKEN_URL: http://keycloak:8080/realms/dataspace/protocol/openid-connect/token
      EDC_OAUTH_PROVIDER_JWKS_URL: http://keycloak:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH_CERTIFICATE_ALIAS: public-key
      EDC_OAUTH_PRIVATE_KEY_ALIAS: private-key
      EDC_OAUTH_CLIENT_ID: forest-owner-a
      EDC_OAUTH_PROVIDER_AUDIENCE: http://keycloak:8080/realms/dataspace
      EDC_OAUTH_VALIDATION_NBF_LEEWAY: 20
      EDC_OAUTH_VALIDATION_ISSUED_AT_LEEWAY: 5
      EDC_AGENT_IDENTITY_KEY: participant_id
      EDC_PARTICIPANT_ID: company-forest-owner-a
      EDC_NODES_FILE_PATH: /resources/nodes.properties
      EDC_OAUTH2_JWKS_URL: http://keycloak:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH2_ISSUER: http://keycloak:8080/realms/dataspace
      EDC_API_AUTH_TYPE: oauth2
      EDC_WEB_HTTP_AUTHENTICATION_TYPE: oauth2
      EDC_OAUTH_CLAIMS_PARTICIPANT_ROLE: wetransform_role
      EDC_OAUTH_CLAIMS_PARTICIPANT_GEOFENCE: geofence
#      EDC_WEB_CORS_ENABLED: true
#      EDC_WEB_CORS_ALLOWED_ORIGINS: http://localhost:8081
#      EDC_WEB_CORS_ALLOWED_METHODS: GET,POST,OPTIONS
#      EDC_WEB_CORS_ALLOWED_HEADERS: Authorization,Content-Type,X-Api-Key

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:19191/api/check/health"]
      interval: 20s
      timeout: 20s
      retries: 5
    depends_on:
      keycloak:
        condition: service_healthy
        restart: true

  forest-owner-b:
#    image: ghcr.io/connected-intelligent-systems/connector:v0.10.0
    image: wetransform/connector:latest
    ports:
      - 29191:29191 # health check
      # - 29192:19192
      - 29193:29193 # management endpoint
      - 29194:29194 # ds protocol (normaly forwarded, but edcs are in same network)
      - 29291:29291 # public endpoint
      - 29199:29199 # federated catalog endpoint
    volumes:
      - ./edc/vault.properties:/resources/vault.properties
      - ./edc/nodes.properties:/resources/nodes.properties
    environment:
      EDC_VAULT_FILE_PATH: /resources/vault.properties
      EDC_DSP_CALLBACK_ADDRESS: http://forest-owner-b:29194/protocol
      EDC_DATAPLANE_API_PUBLIC_BASEURL: http://forest-owner-b:29291/public
      WEB_HTTP_PORT: 29191
      WEB_HTTP_PATH: /api
      WEB_HTTP_MANAGEMENT_PORT: 29193
      WEB_HTTP_MANAGEMENT_PATH: /management
      WEB_HTTP_PROTOCOL_PORT: 29194
      WEB_HTTP_PROTOCOL_PATH: /protocol
      WEB_HTTP_CATALOG_PORT: 29199
      WEB_HTTP_CATALOG_PATH: /catalog
      EDC_PUBLIC_KEY_ALIAS: public-key
      EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS: private-key
      EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS: public-key
      WEB_HTTP_PUBLIC_PORT: 29291
      WEB_HTTP_PUBLIC_PATH: /public
      WEB_HTTP_CONTROL_PORT: 29192
      WEB_HTTP_CONTROL_PATH: /control
      EDC_DATASOURCE_DEFAULT_URL: jdbc:postgresql://postgres:5432/dataspace?currentSchema=forestownerb
      EDC_DATASOURCE_DEFAULT_USER: user
      EDC_DATASOURCE_DEFAULT_PASSWORD: postgres
      EDC_SQL_SCHEMA_AUTOCREATE: true
      EDC_OAUTH_TOKEN_URL: http://keycloak:8080/realms/dataspace/protocol/openid-connect/token
      EDC_OAUTH_PROVIDER_JWKS_URL: http://keycloak:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH_CERTIFICATE_ALIAS: public-key
      EDC_OAUTH_PRIVATE_KEY_ALIAS: private-key
      EDC_OAUTH_CLIENT_ID: forest-owner-b
      EDC_OAUTH_PROVIDER_AUDIENCE: http://keycloak:8080/realms/dataspace
      EDC_OAUTH_VALIDATION_NBF_LEEWAY: 20
      EDC_OAUTH_VALIDATION_ISSUED_AT_LEEWAY: 5
      EDC_AGENT_IDENTITY_KEY: participant_id
      EDC_PARTICIPANT_ID: company-forest-owner-b
      EDC_NODES_FILE_PATH: /resources/nodes.properties
      EDC_OAUTH2_JWKS_URL: http://keycloak:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH2_ISSUER: http://keycloak:8080/realms/dataspace
      EDC_API_AUTH_TYPE: oauth2
      EDC_WEB_HTTP_AUTHENTICATION_TYPE: oauth2
      EDC_OAUTH_CLAIMS_PARTICIPANT_ROLE: wetransform_role
      EDC_OAUTH_CLAIMS_PARTICIPANT_GEOFENCE: geofence
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:29191/api/check/health"]
      interval: 20s
      timeout: 20s
      retries: 5
    depends_on:
      keycloak:
        condition: service_healthy
        restart: true


  forest-owner-c:
    #    image: ghcr.io/connected-intelligent-systems/connector:v0.10.0
    image: wetransform/connector:latest
    ports:
      - 49191:49191 # health check
      # - 29192:19192
      - 49193:49193 # management endpoint
      - 49194:49194 # ds protocol (normaly forwarded, but edcs are in same network)
      - 49291:49291 # public endpoint
      - 49199:49199 # federated catalog endpoint
    volumes:
      - ./edc/vault.properties:/resources/vault.properties
      - ./edc/nodes.properties:/resources/nodes.properties
    environment:
      EDC_VAULT_FILE_PATH: /resources/vault.properties
      EDC_DSP_CALLBACK_ADDRESS: http://forest-owner-c:49194/protocol
      EDC_DATAPLANE_API_PUBLIC_BASEURL: http://forest-owner-c:49291/public
      WEB_HTTP_PORT: 49191
      WEB_HTTP_PATH: /api
      WEB_HTTP_MANAGEMENT_PORT: 49193
      WEB_HTTP_MANAGEMENT_PATH: /management
      WEB_HTTP_PROTOCOL_PORT: 49194
      WEB_HTTP_PROTOCOL_PATH: /protocol
      WEB_HTTP_CATALOG_PORT: 49199
      WEB_HTTP_CATALOG_PATH: /catalog
      EDC_PUBLIC_KEY_ALIAS: public-key
      EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS: private-key
      EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS: public-key
      WEB_HTTP_PUBLIC_PORT: 49291
      WEB_HTTP_PUBLIC_PATH: /public
      WEB_HTTP_CONTROL_PORT: 49192
      WEB_HTTP_CONTROL_PATH: /control
      EDC_DATASOURCE_DEFAULT_URL: jdbc:postgresql://postgres:5432/dataspace?currentSchema=forestownerc
      EDC_DATASOURCE_DEFAULT_USER: user
      EDC_DATASOURCE_DEFAULT_PASSWORD: postgres
      EDC_SQL_SCHEMA_AUTOCREATE: true
      EDC_OAUTH_TOKEN_URL: http://keycloak:8080/realms/dataspace/protocol/openid-connect/token
      EDC_OAUTH_PROVIDER_JWKS_URL: http://keycloak:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH_CERTIFICATE_ALIAS: public-key
      EDC_OAUTH_PRIVATE_KEY_ALIAS: private-key
      EDC_OAUTH_CLIENT_ID: forest-owner-c
      EDC_OAUTH_PROVIDER_AUDIENCE: http://keycloak:8080/realms/dataspace
      EDC_OAUTH_VALIDATION_NBF_LEEWAY: 20
      EDC_OAUTH_VALIDATION_ISSUED_AT_LEEWAY: 5
      EDC_AGENT_IDENTITY_KEY: participant_id
      EDC_PARTICIPANT_ID: company-forest-owner-c
      EDC_NODES_FILE_PATH: /resources/nodes.properties
      EDC_OAUTH2_JWKS_URL: http://keycloak:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH2_ISSUER: http://keycloak:8080/realms/dataspace
      EDC_API_AUTH_TYPE: oauth2
      EDC_WEB_HTTP_AUTHENTICATION_TYPE: oauth2
      EDC_OAUTH_CLAIMS_PARTICIPANT_ROLE: wetransform_role
      EDC_OAUTH_CLAIMS_PARTICIPANT_GEOFENCE: geofence
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:49191/api/check/health" ]
      interval: 20s
      timeout: 20s
      retries: 5
    depends_on:
      keycloak:
        condition: service_healthy
        restart: true

  forest-inventory-researcher:
    #    image: ghcr.io/connected-intelligent-systems/connector:v0.10.0
    image: wetransform/connector:latest
    ports:
      - 39191:39191 # health check
      # - 29192:19192
      - 39193:39193 # management endpoint
      - 39194:39194 # ds protocol (normaly forwarded, but edcs are in same network)
      - 39291:39291 # public endpoint
      - 39199:39199 # federated catalog endpoint
    volumes:
      - ./edc/vault.properties:/resources/vault.properties
      - ./edc/nodes.properties:/resources/nodes.properties
    environment:
      EDC_VAULT_FILE_PATH: /resources/vault.properties
      EDC_DSP_CALLBACK_ADDRESS: http://forest-inventory-researcher:39194/protocol
      EDC_DATAPLANE_API_PUBLIC_BASEURL: http://forest-inventory-researcher:39291/public
      WEB_HTTP_PORT: 39191
      WEB_HTTP_PATH: /api
      WEB_HTTP_MANAGEMENT_PORT: 39193
      WEB_HTTP_MANAGEMENT_PATH: /management
      WEB_HTTP_PROTOCOL_PORT: 39194
      WEB_HTTP_PROTOCOL_PATH: /protocol
      WEB_HTTP_CATALOG_PORT: 39199
      WEB_HTTP_CATALOG_PATH: /catalog
      EDC_PUBLIC_KEY_ALIAS: public-key
      EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS: private-key
      EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS: public-key
      WEB_HTTP_PUBLIC_PORT: 39291
      WEB_HTTP_PUBLIC_PATH: /public
      WEB_HTTP_CONTROL_PORT: 49192
      WEB_HTTP_CONTROL_PATH: /control
      EDC_DATASOURCE_DEFAULT_URL: jdbc:postgresql://postgres:5432/dataspace?currentSchema=inventoryresearcher
      EDC_DATASOURCE_DEFAULT_USER: user
      EDC_DATASOURCE_DEFAULT_PASSWORD: postgres
      EDC_SQL_SCHEMA_AUTOCREATE: true
      EDC_OAUTH_TOKEN_URL: http://keycloak:8080/realms/dataspace/protocol/openid-connect/token
      EDC_OAUTH_PROVIDER_JWKS_URL: http://keycloak:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH_CERTIFICATE_ALIAS: public-key
      EDC_OAUTH_PRIVATE_KEY_ALIAS: private-key
      EDC_OAUTH_CLIENT_ID: forest-inventory-researcher
      EDC_OAUTH_PROVIDER_AUDIENCE: http://keycloak:8080/realms/dataspace
      EDC_OAUTH_VALIDATION_NBF_LEEWAY: 20
      EDC_OAUTH_VALIDATION_ISSUED_AT_LEEWAY: 5
      EDC_AGENT_IDENTITY_KEY: participant_id
      EDC_PARTICIPANT_ID: company-forest-inventory-researcher
      EDC_NODES_FILE_PATH: /resources/nodes.properties
      EDC_OAUTH2_JWKS_URL: http://keycloak:8080/realms/dataspace/protocol/openid-connect/certs
      EDC_OAUTH2_ISSUER: http://keycloak:8080/realms/dataspace
      EDC_API_AUTH_TYPE: oauth2
      EDC_WEB_HTTP_AUTHENTICATION_TYPE: oauth2
      EDC_OAUTH_CLAIMS_PARTICIPANT_ROLE: wetransform_role
      EDC_OAUTH_CLAIMS_PARTICIPANT_GEOFENCE: geofence
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:39191/api/check/health"]
      interval: 20s
      timeout: 20s
      retries: 5
    depends_on:
      keycloak:
        condition: service_healthy
        restart: true

  portal-provider:
    image: ghcr.io/connected-intelligent-systems/portal:ingeodtm-demo-1
    ports:
      - "8085:8085"
    environment:
      EDC_URL: http://forest-owner-a:19193/management
      FEDERATED_CATALOG_URL: http://forest-owner-a:19199/catalog
      PORT: 8085
      DEFAULT_USER_ID: company-forest-owner-a
      DEFAULT_USER_FULL_NAME: Company forest owner a
      DEFAULT_USER_EMAIL: admin@company-forest-owner-a.local
      DEFAULT_USER_TENANT_ID: default
      DEFAULT_USER_ROLES: admin
    configs:
      - source: portal_config_js
        target: /app/public/config.js
    depends_on:
      forest-owner-a:
        condition: service_healthy
        restart: true

  portal-consumer:
    image: ghcr.io/connected-intelligent-systems/portal:ingeodtm-demo-1
    ports:
      - "8086:8086"
    environment:
      EDC_URL: http://forest-owner-b:29193/management
      FEDERATED_CATALOG_URL: http://forest-owner-b:29199/catalog
      PORT: 8086
      DEFAULT_USER_ID: company-forest-owner-b
      DEFAULT_USER_FULL_NAME: Company forest owner b
      DEFAULT_USER_EMAIL: admin@company-forest-owner-b.local
      DEFAULT_USER_TENANT_ID: default
      DEFAULT_USER_ROLES: admin
    configs:
      - source: portal_config_js
        target: /app/public/config.js
    depends_on:
      forest-owner-b:
        condition: service_healthy
        restart: true

  portal-forest-owner-c:
    image: ghcr.io/connected-intelligent-systems/portal:ingeodtm-demo-1
    ports:
      - "8089:8089"
    environment:
      EDC_URL: http://forest-owner-c:49193/management
      FEDERATED_CATALOG_URL: http://forest-owner-c:49199/catalog
      PORT: 8089
      DEFAULT_USER_ID: company-forest-owner-c
      DEFAULT_USER_FULL_NAME: Company forest owner c
      DEFAULT_USER_EMAIL: admin@company-forest-owner-c.local
      DEFAULT_USER_TENANT_ID: default
      DEFAULT_USER_ROLES: admin
    configs:
      - source: portal_config_js
        target: /app/public/config.js
    depends_on:
      forest-owner-c:
        condition: service_healthy
        restart: true

  portal-forest-inventory-researcher:
    image: ghcr.io/connected-intelligent-systems/portal:ingeodtm-demo-1
    ports:
      - "8087:8087"
    environment:
      EDC_URL: http://forest-inventory-researcher:39193/management
      FEDERATED_CATALOG_URL: http://forest-inventory-researcher:39199/catalog
      PORT: 8087
      DEFAULT_USER_ID: company-forest-inventory-researcher
      DEFAULT_USER_FULL_NAME: Company forest-inventory-researcher
      DEFAULT_USER_EMAIL: admin@company-forest-inventory-researcher.local
      DEFAULT_USER_TENANT_ID: default
      DEFAULT_USER_ROLES: admin
    configs:
      - source: portal_config_js
        target: /app/public/config.js
    depends_on:
      forest-inventory-researcher:
        condition: service_healthy
        restart: true

  postgres:
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dataspace
    image: bitnami/postgresql:17.2.0
    ports:
      - "5432:5432"
    configs:
      - source: postgres_init_sql
        target: /docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 30s
      timeout: 10s
      retries: 5

  keycloak:
    image: bitnami/keycloak:23.0.3
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_DATABASE_VENDOR=dev-file
      - KEYCLOAK_ADMIN_USER=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KEYCLOAK_EXTRA_ARGS='--import-realm'
      - KEYCLOAK_ENABLE_HEALTH_ENDPOINTS=true
    volumes:
      - ./keycloak/realm-export-dataspace.json:/opt/bitnami/keycloak/data/import/dataspace-realm.json
    healthcheck:
        test: ["CMD-SHELL", "curl --fail http://localhost:8080/realms/dataspace/.well-known/openid-configuration"]
        interval: 30s
        timeout: 10s
        start_interval: 30s
        retries: 5
    depends_on:
      postgres:
        condition: service_healthy
        restart: true

  geodata:
    image: nginx
    ports:
      - "8088:80"
    volumes:
      - ./geodata:/usr/share/nginx/html:ro
    configs:
      - source: geodata_nginx_config
        target: /etc/nginx/nginx.conf
    restart: always

  import-forest-owner-a-data:
    image: alpine/curl
    volumes:
      - ./initialization/init.sh:/scripts/init.sh
      - ./initialization/minifix.geojson.json:/data
    working_dir: /scripts
    environment:
      - EDC_BASE_URL=http://forest-owner-a:19193
    command: /scripts/init.sh
    depends_on:
      forest-owner-a:
        condition: service_healthy
        restart: true
      forest-owner-b:
        condition: service_healthy
        restart: true
      forest-owner-c:
        condition: service_healthy
        restart: true
      forest-inventory-researcher:
        condition: service_healthy
        restart: true

configs:
  postgres_init_sql:
    content: |
      CREATE SCHEMA IF NOT EXISTS forestownera;
      CREATE SCHEMA IF NOT EXISTS forestownerb;
      CREATE SCHEMA IF NOT EXISTS forestownerc;
      CREATE SCHEMA IF NOT EXISTS inventoryresearcher;
  portal_config_js:
    content: |
      var config = {
        showDevices: ${PORTAL_FRONTEND_SHOW_DEVICES-false},
        showThingDescriptions: ${PORTAL_FRONTEND_SHOW_THING_DESCRIPTIONS-false},
        showQuery: ${PORTAL_FRONTEND_SHOW_QUERY-false},
        showCustomers: ${PORTAL_FRONTEND_SHOW_CUSTOMERS-false},
        showAssets: ${PORTAL_FRONTEND_SHOW_ASSETS-true},
        showPolicies: ${PORTAL_FRONTEND_SHOW_POLICIES-true},
        showContractDefinitions: ${PORTAL_FRONTEND_SHOW_CONTRACT_DEFINITIONS-true},
        showCatalog: ${PORTAL_FRONTEND_SHOW_CATALOG-true},
        showFederatedCatalog: ${PORTAL_FRONTEND_SHOW_FEDERATED_CATALOG-true},
        showContractAgreements: ${PORTAL_FRONTEND_SHOW_CONTRACT_AGREEMENTS-true},
        showTransferProcesses: ${PORTAL_FRONTEND_SHOW_TRANSFER_PROCESSES-true},
        showThingsboard: ${PORTAL_FRONTEND_SHOW_THINGSBOARD-false},
        showKeycloak: ${PORTAL_FRONTEND_SHOW_KEYCLOAK-false}
      }
  geodata_nginx_config:
    content: |
      worker_processes 1;

      events {
          worker_connections 1024;
      }

      http {
          include       mime.types;
          default_type  application/octet-stream;

          server {
              listen 80;
              server_name localhost;

              root /usr/share/nginx/html;
              index index.html;

              location ~ \.json$ {
                  default_type application/json;
              }

              location ~ \.geojson$ {
                  default_type application/json;
              }

              location / {
                  autoindex on;
                  autoindex_format json;
              }

              error_page 404 /404.html;
          }
      }
